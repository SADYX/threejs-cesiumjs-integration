define(["./defaultValue-f6d5e6da","./Matrix3-81054f0f","./Transforms-fce95115","./ComponentDatatype-ab629b88","./GeometryAttribute-81ff775c","./GeometryAttributes-1e4ddcd2","./IndexDatatype-d3db4e7d","./Math-2ce22ee9","./VertexFormat-fbdec922","./WallGeometryLibrary-1c767084","./Matrix2-413c4048","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93","./arrayRemoveDuplicates-9b636830","./PolylinePipeline-8495667b","./EllipsoidGeodesic-2723ab86","./EllipsoidRhumbLine-77eff028","./IntersectionTests-357c3d7f","./Plane-6add0ae1"],function(e,t,i,a,n,r,o,s,l,m,u,d,p,c,f,y,g,h,C,b){"use strict";let x=new t.Cartesian3,A=new t.Cartesian3,_=new t.Cartesian3,E=new t.Cartesian3,F=new t.Cartesian3,v=new t.Cartesian3,w=new t.Cartesian3;function L(i){let a=(i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT)).positions,n=i.maximumHeights,r=i.minimumHeights,o=e.defaultValue(i.vertexFormat,l.VertexFormat.DEFAULT),m=e.defaultValue(i.granularity,s.CesiumMath.RADIANS_PER_DEGREE),u=e.defaultValue(i.ellipsoid,t.Ellipsoid.WGS84);this._positions=a,this._minimumHeights=r,this._maximumHeights=n,this._vertexFormat=l.VertexFormat.clone(o),this._granularity=m,this._ellipsoid=t.Ellipsoid.clone(u),this._workerName="createWallGeometry";let d=1+a.length*t.Cartesian3.packedLength+2;e.defined(r)&&(d+=r.length),e.defined(n)&&(d+=n.length),this.packedLength=d+t.Ellipsoid.packedLength+l.VertexFormat.packedLength+1}L.pack=function(i,a,n){let r;n=e.defaultValue(n,0);let o=i._positions,s=o.length;for(a[n++]=s,r=0;r<s;++r,n+=t.Cartesian3.packedLength)t.Cartesian3.pack(o[r],a,n);let m=i._minimumHeights;if(s=e.defined(m)?m.length:0,a[n++]=s,e.defined(m))for(r=0;r<s;++r)a[n++]=m[r];let u=i._maximumHeights;if(s=e.defined(u)?u.length:0,a[n++]=s,e.defined(u))for(r=0;r<s;++r)a[n++]=u[r];return t.Ellipsoid.pack(i._ellipsoid,a,n),n+=t.Ellipsoid.packedLength,l.VertexFormat.pack(i._vertexFormat,a,n),a[n+=l.VertexFormat.packedLength]=i._granularity,a};let V=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),k=new l.VertexFormat,H={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:V,vertexFormat:k,granularity:void 0};return L.unpack=function(i,a,n){let r,o,s;a=e.defaultValue(a,0);let m=i[a++],u=Array(m);for(r=0;r<m;++r,a+=t.Cartesian3.packedLength)u[r]=t.Cartesian3.unpack(i,a);if((m=i[a++])>0)for(o=Array(m),r=0;r<m;++r)o[r]=i[a++];if((m=i[a++])>0)for(s=Array(m),r=0;r<m;++r)s[r]=i[a++];let d=t.Ellipsoid.unpack(i,a,V);a+=t.Ellipsoid.packedLength;let p=l.VertexFormat.unpack(i,a,k),c=i[a+=l.VertexFormat.packedLength];return e.defined(n)?(n._positions=u,n._minimumHeights=o,n._maximumHeights=s,n._ellipsoid=t.Ellipsoid.clone(d,n._ellipsoid),n._vertexFormat=l.VertexFormat.clone(p,n._vertexFormat),n._granularity=c,n):(H.positions=u,H.minimumHeights=o,H.maximumHeights=s,H.granularity=c,new L(H))},L.fromConstantHeights=function(t){let i,a;let n=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,r=t.minimumHeight,o=t.maximumHeight,s=e.defined(r),l=e.defined(o);if(s||l){let e=n.length;i=s?Array(e):void 0,a=l?Array(e):void 0;for(let t=0;t<e;++t)s&&(i[t]=r),l&&(a[t]=o)}return new L({positions:n,maximumHeights:a,minimumHeights:i,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},L.createGeometry=function(l){let u=l._positions,d=l._minimumHeights,p=l._maximumHeights,c=l._vertexFormat,f=l._granularity,y=l._ellipsoid,g=m.WallGeometryLibrary.computePositions(y,u,p,d,f,!0);if(!e.defined(g))return;let h=g.bottomPositions,C=g.topPositions,b=g.numCorners,L=C.length,V=2*L,k=c.position?new Float64Array(V):void 0,H=c.normal?new Float32Array(V):void 0,G=c.tangent?new Float32Array(V):void 0,D=c.bitangent?new Float32Array(V):void 0,P=c.st?new Float32Array(V/3*2):void 0,T,z=0,O=0,R=0,S=0,I=0,M=w,N=v,W=F,B=!0;L/=3;let U=0,q=1/(L-b-1);for(T=0;T<L;++T){let e=3*T,i=t.Cartesian3.fromArray(C,e,x),a=t.Cartesian3.fromArray(h,e,A);if(c.position&&(k[z++]=a.x,k[z++]=a.y,k[z++]=a.z,k[z++]=i.x,k[z++]=i.y,k[z++]=i.z),c.st&&(P[I++]=U,P[I++]=0,P[I++]=U,P[I++]=1),c.normal||c.tangent||c.bitangent){let a=t.Cartesian3.clone(t.Cartesian3.ZERO,E),n=t.Cartesian3.subtract(i,y.geodeticSurfaceNormal(i,A),A);if(T+1<L&&(a=t.Cartesian3.fromArray(C,e+3,E)),B){let e=t.Cartesian3.subtract(a,i,_),r=t.Cartesian3.subtract(n,i,x);M=t.Cartesian3.normalize(t.Cartesian3.cross(r,e,M),M),B=!1}t.Cartesian3.equalsEpsilon(i,a,s.CesiumMath.EPSILON10)?B=!0:(U+=q,c.tangent&&(N=t.Cartesian3.normalize(t.Cartesian3.subtract(a,i,N),N)),c.bitangent&&(W=t.Cartesian3.normalize(t.Cartesian3.cross(M,N,W),W))),c.normal&&(H[O++]=M.x,H[O++]=M.y,H[O++]=M.z,H[O++]=M.x,H[O++]=M.y,H[O++]=M.z),c.tangent&&(G[S++]=N.x,G[S++]=N.y,G[S++]=N.z,G[S++]=N.x,G[S++]=N.y,G[S++]=N.z),c.bitangent&&(D[R++]=W.x,D[R++]=W.y,D[R++]=W.z,D[R++]=W.x,D[R++]=W.y,D[R++]=W.z)}}let J=new r.GeometryAttributes;c.position&&(J.position=new n.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:k})),c.normal&&(J.normal=new n.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:H})),c.tangent&&(J.tangent=new n.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:G})),c.bitangent&&(J.bitangent=new n.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:D})),c.st&&(J.st=new n.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:P}));let Y=V/3;V-=6*(b+1);let Z=o.IndexDatatype.createTypedArray(Y,V),j=0;for(T=0;T<Y-2;T+=2){let e=T,i=T+2,a=t.Cartesian3.fromArray(k,3*e,x),n=t.Cartesian3.fromArray(k,3*i,A);if(t.Cartesian3.equalsEpsilon(a,n,s.CesiumMath.EPSILON10))continue;let r=T+1,o=T+3;Z[j++]=r,Z[j++]=e,Z[j++]=o,Z[j++]=o,Z[j++]=e,Z[j++]=i}return new n.Geometry({attributes:J,indices:Z,primitiveType:n.PrimitiveType.TRIANGLES,boundingSphere:new i.BoundingSphere.fromVertices(k)})},function(i,a){return e.defined(a)&&(i=L.unpack(i,a)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),L.createGeometry(i)}});