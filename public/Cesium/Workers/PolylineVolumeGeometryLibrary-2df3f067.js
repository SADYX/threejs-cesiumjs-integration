define(["exports","./Matrix2-413c4048","./Matrix3-81054f0f","./EllipsoidTangentPlane-82f2a887","./Math-2ce22ee9","./PolylinePipeline-8495667b","./Transforms-fce95115","./defaultValue-f6d5e6da"],function(e,a,t,n,r,i,l,s){"use strict";var o=Object.freeze({ROUNDED:0,MITERED:1,BEVELED:2});let C={};function c(e,a){s.defined(C[e])||(C[e]=!0,console.warn(s.defaultValue(a,e)))}c.geometryOutlines="Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.",c.geometryZIndex="Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored",c.geometryHeightReference="Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored",c.geometryExtrudedHeightReference="Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored";let u=[new t.Cartesian3,new t.Cartesian3],d=new t.Cartesian3,g=new t.Cartesian3,y=new t.Cartesian3,f=new t.Cartesian3,h=new t.Cartesian3,m=new t.Cartesian3,p=new t.Cartesian3,w=new t.Cartesian3,x=new t.Cartesian3,E=new t.Cartesian3,P=new t.Cartesian3,M={},T=new t.Cartographic;function b(e,a,n,r){let i;let l=e[0],s=e[1],o=t.Cartesian3.angleBetween(l,s),C=Math.ceil(o/r),c=Array(C);if(a===n){for(i=0;i<C;i++)c[i]=a;return c.push(n),c}let u=(n-a)/C;for(i=1;i<C;i++){let e=a+i*u;c[i]=e}return c[0]=a,c.push(n),c}let B=new t.Cartesian3,z=new t.Cartesian3,S=new t.Cartesian3(-1,0,0),A=new a.Matrix4,D=new a.Matrix4,R=new t.Matrix3,O=t.Matrix3.IDENTITY.clone(),V=new t.Cartesian3,I=new a.Cartesian4,N=new t.Cartesian3;function v(e,r,i,s,o,C,c,u){let d=V,g=I;A=l.Transforms.eastNorthUpToFixedFrame(e,o,A),d=a.Matrix4.multiplyByPointAsVector(A,S,d),d=t.Cartesian3.normalize(d,d);let y=function(e,r,i,l){let s=new n.EllipsoidTangentPlane(i,l),o=s.projectPointOntoPlane(t.Cartesian3.add(i,e,B),B),C=s.projectPointOntoPlane(t.Cartesian3.add(i,r,z),z),c=a.Cartesian2.angleBetween(o,C);return C.x*o.y-C.y*o.x>=0?-c:c}(d,r,e,o);R=t.Matrix3.fromRotationZ(y,R),N.z=C,A=a.Matrix4.multiplyTransformation(A,a.Matrix4.fromRotationTranslation(R,N,D),A);let f=O;f[0]=c;for(let e=0;e<u;e++)for(let e=0;e<i.length;e+=3)g=t.Cartesian3.fromArray(i,e,g),g=t.Matrix3.multiplyByVector(f,g,g),g=a.Matrix4.multiplyByPoint(A,g,g),s.push(g.x,g.y,g.z);return s}let G=new t.Cartesian3;function H(e,a,n,r,i,l,s){for(let o=0;o<e.length;o+=3)r=v(t.Cartesian3.fromArray(e,o,G),a,n,r,i,l[o/3],s,1);return r}function L(e,a){let t=e.length,n=Array(3*t),r=0,i=a.x+a.width/2,l=a.y+a.height/2;for(let a=0;a<t;a++)n[r++]=e[a].x-i,n[r++]=0,n[r++]=e[a].y-l;return n}let j=new l.Quaternion,Q=new t.Cartesian3,q=new t.Matrix3;function F(e,a,n,i,s,C,c,u,d,g){let y,f;let h=t.Cartesian3.angleBetween(t.Cartesian3.subtract(a,e,E),t.Cartesian3.subtract(n,e,P)),m=i===o.BEVELED?0:Math.ceil(h/r.CesiumMath.toRadians(5));if(y=s?t.Matrix3.fromQuaternion(l.Quaternion.fromAxisAngle(t.Cartesian3.negate(e,E),h/(m+1),j),q):t.Matrix3.fromQuaternion(l.Quaternion.fromAxisAngle(e,h/(m+1),j),q),a=t.Cartesian3.clone(a,Q),m>0){let n=g?2:1;for(let r=0;r<m;r++)a=t.Matrix3.multiplyByVector(y,a,a),f=t.Cartesian3.subtract(a,e,E),f=t.Cartesian3.normalize(f,f),s||(f=t.Cartesian3.negate(f,f)),c=v(C.scaleToGeodeticSurface(a,P),f,u,c,C,d,1,n)}else f=t.Cartesian3.subtract(a,e,E),f=t.Cartesian3.normalize(f,f),s||(f=t.Cartesian3.negate(f,f)),c=v(C.scaleToGeodeticSurface(a,P),f,u,c,C,d,1,1),n=t.Cartesian3.clone(n,Q),f=t.Cartesian3.subtract(n,e,E),f=t.Cartesian3.normalize(f,f),s||(f=t.Cartesian3.negate(f,f)),c=v(C.scaleToGeodeticSurface(n,P),f,u,c,C,d,1,1);return c}M.removeDuplicatesFromShape=function(e){let t=e.length,n=[];for(let r=t-1,i=0;i<t;r=i++){let t=e[r],l=e[i];a.Cartesian2.equals(t,l)||n.push(l)}return n},M.angleIsGreaterThanPi=function(e,a,r,i){let l=new n.EllipsoidTangentPlane(r,i),s=l.projectPointOntoPlane(t.Cartesian3.add(r,e,B),B),o=l.projectPointOntoPlane(t.Cartesian3.add(r,a,z),z);return o.x*s.y-o.y*s.x>=0};let U=new t.Cartesian3,_=new t.Cartesian3;M.computePositions=function(e,a,n,l,s){let C=l._ellipsoid,P=function(e,a){let t=Array(e.length);for(let n=0;n<e.length;n++){let r=e[n];T=a.cartesianToCartographic(r,T),t[n]=T.height,e[n]=a.scaleToGeodeticSurface(r,r)}return t}(e,C),B=l._granularity,z=l._cornerType,S=s?function(e,a){let t=e.length,n=Array(6*t),r=0,i=a.x+a.width/2,l=a.y+a.height/2,s=e[0];n[r++]=s.x-i,n[r++]=0,n[r++]=s.y-l;for(let a=1;a<t;a++){s=e[a];let t=s.x-i,o=s.y-l;n[r++]=t,n[r++]=0,n[r++]=o,n[r++]=t,n[r++]=0,n[r++]=o}return s=e[0],n[r++]=s.x-i,n[r++]=0,n[r++]=s.y-l,n}(a,n):L(a,n),A=s?L(a,n):void 0,D=n.height/2,R=n.width/2,O=e.length,V=[],I=s?[]:void 0,N=d,G=g,j=y,Q=f,q=h,Z=m,W=p,Y=w,k=x,J=e[0],K=e[1];Q=C.geodeticSurfaceNormal(J,Q),N=t.Cartesian3.subtract(K,J,N),N=t.Cartesian3.normalize(N,N),Y=t.Cartesian3.cross(Q,N,Y),Y=t.Cartesian3.normalize(Y,Y);let X,$=P[0],ee=P[1];s&&(I=v(J,Y,A,I,C,$+D,1,1)),k=t.Cartesian3.clone(J,k),J=K,G=t.Cartesian3.negate(N,G);for(let a=1;a<O-1;a++){let n=s?2:1;if(K=e[a+1],J.equals(K)){c("Positions are too close and are considered equivalent with rounding error.");continue}N=t.Cartesian3.subtract(K,J,N),N=t.Cartesian3.normalize(N,N),j=t.Cartesian3.add(N,G,j),j=t.Cartesian3.normalize(j,j),Q=C.geodeticSurfaceNormal(J,Q);let l=t.Cartesian3.multiplyByScalar(Q,t.Cartesian3.dot(N,Q),U);t.Cartesian3.subtract(N,l,l),t.Cartesian3.normalize(l,l);let d=t.Cartesian3.multiplyByScalar(Q,t.Cartesian3.dot(G,Q),_);if(t.Cartesian3.subtract(G,d,d),t.Cartesian3.normalize(d,d),r.CesiumMath.equalsEpsilon(Math.abs(t.Cartesian3.dot(l,d)),1,r.CesiumMath.EPSILON7))V=v(k,Y,S,V,C,$+D,1,1),k=J;else{j=t.Cartesian3.cross(j,Q,j),j=t.Cartesian3.cross(Q,j,j),j=t.Cartesian3.normalize(j,j);let e=1/Math.max(.25,t.Cartesian3.magnitude(t.Cartesian3.cross(j,G,E))),a=M.angleIsGreaterThanPi(N,G,J,C);a?(q=t.Cartesian3.add(J,t.Cartesian3.multiplyByScalar(j,e*R,j),q),Z=t.Cartesian3.add(q,t.Cartesian3.multiplyByScalar(Y,R,Z),Z),u[0]=t.Cartesian3.clone(k,u[0]),u[1]=t.Cartesian3.clone(Z,u[1]),X=b(u,$+D,ee+D,B),V=H(i.PolylinePipeline.generateArc({positions:u,granularity:B,ellipsoid:C}),Y,S,V,C,X,1),Y=t.Cartesian3.cross(Q,N,Y),Y=t.Cartesian3.normalize(Y,Y),W=t.Cartesian3.add(q,t.Cartesian3.multiplyByScalar(Y,R,W),W),z===o.ROUNDED||z===o.BEVELED?F(q,Z,W,z,a,C,V,S,ee+D,s):(j=t.Cartesian3.negate(j,j),V=v(J,j,S,V,C,ee+D,e,n)),k=t.Cartesian3.clone(W,k)):(q=t.Cartesian3.add(J,t.Cartesian3.multiplyByScalar(j,e*R,j),q),Z=t.Cartesian3.add(q,t.Cartesian3.multiplyByScalar(Y,-R,Z),Z),u[0]=t.Cartesian3.clone(k,u[0]),u[1]=t.Cartesian3.clone(Z,u[1]),X=b(u,$+D,ee+D,B),V=H(i.PolylinePipeline.generateArc({positions:u,granularity:B,ellipsoid:C}),Y,S,V,C,X,1),Y=t.Cartesian3.cross(Q,N,Y),Y=t.Cartesian3.normalize(Y,Y),W=t.Cartesian3.add(q,t.Cartesian3.multiplyByScalar(Y,-R,W),W),z===o.ROUNDED||z===o.BEVELED?F(q,Z,W,z,a,C,V,S,ee+D,s):V=v(J,j,S,V,C,ee+D,e,n),k=t.Cartesian3.clone(W,k)),G=t.Cartesian3.negate(N,G)}$=ee,ee=P[a+1],J=K}u[0]=t.Cartesian3.clone(k,u[0]),u[1]=t.Cartesian3.clone(J,u[1]),X=b(u,$+D,ee+D,B),V=H(i.PolylinePipeline.generateArc({positions:u,granularity:B,ellipsoid:C}),Y,S,V,C,X,1),s&&(I=v(J,Y,A,I,C,ee+D,1,1)),O=V.length;let ea=s?O+I.length:O,et=new Float64Array(ea);return et.set(V),s&&et.set(I,O),et},e.CornerType=o,e.PolylineVolumeGeometryLibrary=M,e.oneTimeWarning=c});