define(["exports","./Matrix3-81054f0f","./Math-2ce22ee9","./Transforms-fce95115"],function(a,e,t,i){"use strict";let r={},n=new e.Cartesian3,s=new e.Cartesian3,l=new i.Quaternion,o=new e.Matrix3;function C(a,t,r,C,y,u,m,c,h,x){let M=a+t;e.Cartesian3.multiplyByScalar(C,Math.cos(M),n),e.Cartesian3.multiplyByScalar(r,Math.sin(M),s),e.Cartesian3.add(n,s,n);let f=Math.cos(a);f*=f;let z=Math.sin(a);z*=z;let _=u/Math.sqrt(m*f+y*z)/c;return i.Quaternion.fromAxisAngle(n,_,l),e.Matrix3.fromQuaternion(l,o),e.Matrix3.multiplyByVector(o,h,x),e.Cartesian3.normalize(x,x),e.Cartesian3.multiplyByScalar(x,c,x),x}let y=new e.Cartesian3,u=new e.Cartesian3,m=new e.Cartesian3,c=new e.Cartesian3;r.raisePositionsToHeight=function(a,t,i){let r=t.ellipsoid,n=t.height,s=t.extrudedHeight,l=i?a.length/3*2:a.length/3,o=new Float64Array(3*l),C=a.length,h=i?C:0;for(let t=0;t<C;t+=3){let l=t+1,C=t+2,x=e.Cartesian3.fromArray(a,t,y);r.scaleToGeodeticSurface(x,x);let M=e.Cartesian3.clone(x,u),f=r.geodeticSurfaceNormal(x,c),z=e.Cartesian3.multiplyByScalar(f,n,m);e.Cartesian3.add(x,z,x),i&&(e.Cartesian3.multiplyByScalar(f,s,z),e.Cartesian3.add(M,z,M),o[t+h]=M.x,o[l+h]=M.y,o[C+h]=M.z),o[t]=x.x,o[l]=x.y,o[C]=x.z}return o};let h=new e.Cartesian3,x=new e.Cartesian3,M=new e.Cartesian3;r.computeEllipsePositions=function(a,i,r){let n,s,l,o,c;let f=a.semiMinorAxis,z=a.semiMajorAxis,_=a.rotation,O=a.center,d=8*a.granularity,p=f*f,P=z*z,w=z*f,T=e.Cartesian3.magnitude(O),I=e.Cartesian3.normalize(O,h),g=e.Cartesian3.cross(e.Cartesian3.UNIT_Z,O,x);g=e.Cartesian3.normalize(g,g);let E=e.Cartesian3.cross(I,g,M),V=1+Math.ceil(t.CesiumMath.PI_OVER_TWO/d),A=t.CesiumMath.PI_OVER_TWO/(V-1),R=t.CesiumMath.PI_OVER_TWO-V*A;R<0&&(V-=Math.ceil(Math.abs(R)/A));let W=i?Array(3*(V*(V+2)*2)):void 0,S=0,B=y,Q=u,b=4*V*3,v=b-1,G=0,H=r?Array(b):void 0;for(B=C(R=t.CesiumMath.PI_OVER_TWO,_,E,g,p,w,P,T,I,B),i&&(W[S++]=B.x,W[S++]=B.y,W[S++]=B.z),r&&(H[v--]=B.z,H[v--]=B.y,H[v--]=B.x),R=t.CesiumMath.PI_OVER_TWO-A,n=1;n<V+1;++n){if(B=C(R,_,E,g,p,w,P,T,I,B),Q=C(Math.PI-R,_,E,g,p,w,P,T,I,Q),i){for(W[S++]=B.x,W[S++]=B.y,W[S++]=B.z,l=2*n+2,s=1;s<l-1;++s)o=s/(l-1),c=e.Cartesian3.lerp(B,Q,o,m),W[S++]=c.x,W[S++]=c.y,W[S++]=c.z;W[S++]=Q.x,W[S++]=Q.y,W[S++]=Q.z}r&&(H[v--]=B.z,H[v--]=B.y,H[v--]=B.x,H[G++]=Q.x,H[G++]=Q.y,H[G++]=Q.z),R=t.CesiumMath.PI_OVER_TWO-(n+1)*A}for(n=V;n>1;--n){if(B=C(-(R=t.CesiumMath.PI_OVER_TWO-(n-1)*A),_,E,g,p,w,P,T,I,B),Q=C(R+Math.PI,_,E,g,p,w,P,T,I,Q),i){for(W[S++]=B.x,W[S++]=B.y,W[S++]=B.z,l=2*(n-1)+2,s=1;s<l-1;++s)o=s/(l-1),c=e.Cartesian3.lerp(B,Q,o,m),W[S++]=c.x,W[S++]=c.y,W[S++]=c.z;W[S++]=Q.x,W[S++]=Q.y,W[S++]=Q.z}r&&(H[v--]=B.z,H[v--]=B.y,H[v--]=B.x,H[G++]=Q.x,H[G++]=Q.y,H[G++]=Q.z)}B=C(-(R=t.CesiumMath.PI_OVER_TWO),_,E,g,p,w,P,T,I,B);let N={};return i&&(W[S++]=B.x,W[S++]=B.y,W[S++]=B.z,N.positions=W,N.numPts=V),r&&(H[v--]=B.z,H[v--]=B.y,H[v--]=B.x,N.outerPositions=H),N},a.EllipseGeometryLibrary=r});