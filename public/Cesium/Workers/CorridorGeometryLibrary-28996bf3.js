define(["exports","./Matrix3-81054f0f","./PolylineVolumeGeometryLibrary-2df3f067","./defaultValue-f6d5e6da","./Math-2ce22ee9","./PolylinePipeline-8495667b","./Transforms-fce95115"],function(a,e,r,t,n,i,s){"use strict";let l={},o=new e.Cartesian3,C=new e.Cartesian3,y=new e.Cartesian3,u=new e.Cartesian3,c=[new e.Cartesian3,new e.Cartesian3],d=new e.Cartesian3,p=new e.Cartesian3,m=new e.Cartesian3,f=new e.Cartesian3,g=new e.Cartesian3,h=new e.Cartesian3,x=new e.Cartesian3,z=new e.Cartesian3,w=new e.Cartesian3,P=new e.Cartesian3,A=new s.Quaternion,B=new e.Matrix3;function E(a,t,i,l,y){let u;let c=e.Cartesian3.angleBetween(e.Cartesian3.subtract(t,a,o),e.Cartesian3.subtract(i,a,C)),d=l===r.CornerType.BEVELED?1:Math.ceil(c/n.CesiumMath.toRadians(5))+1,p=3*d,m=Array(p);m[p-3]=i.x,m[p-2]=i.y,m[p-1]=i.z,u=y?e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(e.Cartesian3.negate(a,o),c/d,A),B):e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(a,c/d,A),B);let f=0;t=e.Cartesian3.clone(t,o);for(let a=0;a<d;a++)t=e.Matrix3.multiplyByVector(u,t,t),m[f++]=t.x,m[f++]=t.y,m[f++]=t.z;return m}function S(a,r,t,n){let i=o;return n||(r=e.Cartesian3.negate(r,r)),[(i=e.Cartesian3.add(a,r,i)).x,i.y,i.z,t.x,t.y,t.z]}function b(a,r,t,n){let i=Array(a.length),s=Array(a.length),l=e.Cartesian3.multiplyByScalar(r,t,o),c=e.Cartesian3.negate(l,C),d=0,p=a.length-1;for(let r=0;r<a.length;r+=3){let t=e.Cartesian3.fromArray(a,r,y),n=e.Cartesian3.add(t,c,u);i[d++]=n.x,i[d++]=n.y,i[d++]=n.z;let o=e.Cartesian3.add(t,l,u);s[p--]=o.z,s[p--]=o.y,s[p--]=o.x}return n.push(i,s),n}l.addAttribute=function(a,e,r,n){let i=e.x,s=e.y,l=e.z;t.defined(r)&&(a[r]=i,a[r+1]=s,a[r+2]=l),t.defined(n)&&(a[n]=l,a[n-1]=s,a[n-2]=i)};let D=new e.Cartesian3,M=new e.Cartesian3;l.computePositions=function(a){let t,s;let l=a.granularity,C=a.positions,y=a.ellipsoid,u=a.width/2,A=a.cornerType,B=a.saveAttributes,T=d,N=p,L=m,V=f,O=g,R=h,Q=x,U=z,G=w,v=P,I=[],q=B?[]:void 0,j=B?[]:void 0,k=C[0],F=C[1];N=e.Cartesian3.normalize(e.Cartesian3.subtract(F,k,N),N),T=y.geodeticSurfaceNormal(k,T),V=e.Cartesian3.normalize(e.Cartesian3.cross(T,N,V),V),B&&(q.push(V.x,V.y,V.z),j.push(T.x,T.y,T.z)),Q=e.Cartesian3.clone(k,Q),k=F,L=e.Cartesian3.negate(N,L);let H=[],J=C.length;for(t=1;t<J-1;t++){T=y.geodeticSurfaceNormal(k,T),F=C[t+1],N=e.Cartesian3.normalize(e.Cartesian3.subtract(F,k,N),N),O=e.Cartesian3.normalize(e.Cartesian3.add(N,L,O),O);let a=e.Cartesian3.multiplyByScalar(T,e.Cartesian3.dot(N,T),D);e.Cartesian3.subtract(N,a,a),e.Cartesian3.normalize(a,a);let s=e.Cartesian3.multiplyByScalar(T,e.Cartesian3.dot(L,T),M);if(e.Cartesian3.subtract(L,s,s),e.Cartesian3.normalize(s,s),!n.CesiumMath.equalsEpsilon(Math.abs(e.Cartesian3.dot(a,s)),1,n.CesiumMath.EPSILON7)){O=e.Cartesian3.cross(O,T,O),O=e.Cartesian3.cross(T,O,O),O=e.Cartesian3.normalize(O,O);let a=u/Math.max(.25,e.Cartesian3.magnitude(e.Cartesian3.cross(O,L,o))),t=r.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(N,L,k,y);O=e.Cartesian3.multiplyByScalar(O,a,O),t?(U=e.Cartesian3.add(k,O,U),v=e.Cartesian3.add(U,e.Cartesian3.multiplyByScalar(V,u,v),v),G=e.Cartesian3.add(U,e.Cartesian3.multiplyByScalar(V,2*u,G),G),c[0]=e.Cartesian3.clone(Q,c[0]),c[1]=e.Cartesian3.clone(v,c[1]),I=b(i.PolylinePipeline.generateArc({positions:c,granularity:l,ellipsoid:y}),V,u,I),B&&(q.push(V.x,V.y,V.z),j.push(T.x,T.y,T.z)),R=e.Cartesian3.clone(G,R),V=e.Cartesian3.normalize(e.Cartesian3.cross(T,N,V),V),G=e.Cartesian3.add(U,e.Cartesian3.multiplyByScalar(V,2*u,G),G),Q=e.Cartesian3.add(U,e.Cartesian3.multiplyByScalar(V,u,Q),Q),A===r.CornerType.ROUNDED||A===r.CornerType.BEVELED?H.push({leftPositions:E(U,R,G,A,t)}):H.push({leftPositions:S(k,e.Cartesian3.negate(O,O),G,t)})):(G=e.Cartesian3.add(k,O,G),v=e.Cartesian3.add(G,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(V,u,v),v),v),U=e.Cartesian3.add(G,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(V,2*u,U),U),U),c[0]=e.Cartesian3.clone(Q,c[0]),c[1]=e.Cartesian3.clone(v,c[1]),I=b(i.PolylinePipeline.generateArc({positions:c,granularity:l,ellipsoid:y}),V,u,I),B&&(q.push(V.x,V.y,V.z),j.push(T.x,T.y,T.z)),R=e.Cartesian3.clone(U,R),V=e.Cartesian3.normalize(e.Cartesian3.cross(T,N,V),V),U=e.Cartesian3.add(G,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(V,2*u,U),U),U),Q=e.Cartesian3.add(G,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(V,u,Q),Q),Q),A===r.CornerType.ROUNDED||A===r.CornerType.BEVELED?H.push({rightPositions:E(G,R,U,A,t)}):H.push({rightPositions:S(k,O,U,t)})),L=e.Cartesian3.negate(N,L)}k=F}return T=y.geodeticSurfaceNormal(k,T),c[0]=e.Cartesian3.clone(Q,c[0]),c[1]=e.Cartesian3.clone(k,c[1]),I=b(i.PolylinePipeline.generateArc({positions:c,granularity:l,ellipsoid:y}),V,u,I),B&&(q.push(V.x,V.y,V.z),j.push(T.x,T.y,T.z)),A===r.CornerType.ROUNDED&&(s=function(a){let t=d,n=p,i=m,s=a[1];n=e.Cartesian3.fromArray(a[1],s.length-3,n),i=e.Cartesian3.fromArray(a[0],0,i),t=e.Cartesian3.midpoint(n,i,t);let l=E(t,n,i,r.CornerType.ROUNDED,!1),o=a.length-1,C=a[o-1];return s=a[o],n=e.Cartesian3.fromArray(C,C.length-3,n),i=e.Cartesian3.fromArray(s,0,i),[l,E(t=e.Cartesian3.midpoint(n,i,t),n,i,r.CornerType.ROUNDED,!1)]}(I)),{positions:I,corners:H,lefts:q,normals:j,endPositions:s}},a.CorridorGeometryLibrary=l});